name: My First GitHub CI

on:
  push:
    branches: '**'
  pull_request:
    branches: [ $default-branch ]

jobs:
  Setup_CMake :
  # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - run : sudo apt-get install xorg-dev libglu1-mesa-dev
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
    
  Compile_Project:
    #needs: Setup_CMake
    runs-on: ubuntu-latest
    steps:
      - run : echo "Trigger = ${{ github.event_name }} event, running on ${{ runner.os }}"
      - run: echo "Branch = ${{ github.ref }} of "${{ github.repository }}."
      - name: Getting the Repo Code &#58; 
        uses: actions/checkout@v2
      - name: configure
        run: ./configure
      - name: make
        run: make
      - name: make check
        run: make check
      - name: make distcheck
        run: make distcheck
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "This job's status is ${{ job.status }}."
